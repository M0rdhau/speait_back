{"version":3,"sources":["services/posts.js","reducers/postReducer.js","components/PostList.js","components/Post.js","reducers/userReducer.js","hooks/index.js","components/PostForm.js","images/Feed-icon.png","images/pider_sheep.png","components/About.js","App.js","store.js","index.js"],"names":["baseUrl","token","createPost","newPost","a","config","headers","Authorization","axios","post","response","data","getAll","get","comment","id","setToken","userToken","initPosts","dispatch","postService","type","commentPost","postReducer","state","action","postToAdd","filter","blog","map","PostList","useDispatch","useEffect","posts","useSelector","className","sort","b","Date","parse","date","postBody","content","substring","title","to","Post","putComment","event","preventDefault","text","target","value","author","undefined","dangerouslySetInnerHTML","__html","marked","comments","onSubmit","name","src","USER_NAME","USER_TOKEN","userReducer","useField","useState","setValue","onChange","clear","PostForm","userInfo","user","username","contentValue","titleValue","postToCreate","About","rel","href","App","padding","window","localStorage","getItem","initUser","match","useRouteMatch","find","params","style","sheepImage","width","height","rssImage","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbc3a827.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/posts'\nlet token = null\n\nconst setToken = (userToken) => {\n  token = `bearer ${userToken}`\n}\n\nconst createPost = async newPost => {\n  const config = { headers: { Authorization: token } }\n  const response = await axios.post(baseUrl, newPost, config)\n  return response.data\n}\n\n// const deletePost = async postId => {\n//   const response = await axios.delete(`${baseUrl}/${postId}`)\n//   return response.data\n// }\n\nconst getAll = async () => {\n  const response  = await axios.get(baseUrl)\n  return response.data\n}\n\nconst comment = async (post, comment) => {\n  const response = await axios.post(`${baseUrl}/${post.id}/comments`, comment)\n  return response.data\n}\n\nexport default { getAll, createPost, comment, setToken }\n\n","import postService from '../services/posts'\n\nconst postReducer = (state = [], action) => {\n  switch (action.type)  {\n    case 'POSTS_INIT':\n      return action.data\n    case 'CREATE':\n      return [...state, action.postToAdd]\n    case 'DELETE':\n      return state.filter(blog => action.id !== blog.id)\n    case 'UPDATE':\n      return state.map(post => action.newPost.id !== post.id ? post : action.newPost)\n    default:\n      return state\n  }\n}\n\nexport const createPost = (post) => {\n  return async dispatch => {\n    const postToAdd = await postService.createPost(post)\n    dispatch({\n      type: 'CREATE',\n      postToAdd\n    })\n  }\n}\n\nexport const deletePost = (id) => {\n  return async dispatch => {\n    await postService.deletePost(id)\n    dispatch({\n      type: 'DELETE',\n      id\n    })\n  }\n}\n\nexport const initPosts = () => {\n  return async dispatch => {\n    const data = await postService.getAll()\n    dispatch({\n      type: 'POSTS_INIT',\n      data\n    })\n  }\n}\n\nexport const commentPost = (post, comment) => {\n  return async dispatch => {\n    const newPost = await postService.comment(post, comment)\n    dispatch({\n      type: 'UPDATE',\n      newPost\n    })\n  }\n}\n\nexport default postReducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { initPosts } from '../reducers/postReducer'\n// import Post from './Post'\n\nconst PREVIEW_LENGTH = 30\n\nconst PostList = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initPosts())\n  }, [dispatch])\n\n  const posts = useSelector(state => state.posts)\n  //postbody.substring code looks questionable,I know.\n  //but writing a regex would be much\n  //more effort\n  return (\n    <div className=\"postCollection\">\n      {\n        posts.sort((a, b) => Date.parse(b.date) - Date.parse(a.date)).map(post => {\n          const postBody = post.content.substring(0, PREVIEW_LENGTH)\n          return(\n            <div className=\"postBody\" key={post.id}>\n              <h3>{post.title}</h3>\n              <h5>{post.date}</h5>\n              <p>{postBody.substring(1)}... <Link to={`/posts/${post.id}`}>show more</Link></p>\n            </div>\n          )\n        } )\n      }\n    </div>\n  )\n}\n\nexport default PostList\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { commentPost, initPosts } from '../reducers/postReducer'\nimport marked from 'marked'\n\nconst Post = ({ post } ) => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(initPosts())\n  }, [dispatch])\n\n  const putComment = async (event) => {\n    event.preventDefault()\n    const text = event.target.comment.value\n    const author = event.target.author.value\n    event.target.author.value = ''\n    event.target.comment.value = ''\n    dispatch(commentPost(post, { text, author }))\n  }\n\n\n  if(post !== undefined){\n    return (\n      <div className=\"postBody\">\n        <div className=\"postTitles\">\n          <h2>{post.title}</h2>\n          <h3><em>By: {post.author}</em></h3>\n        </div>\n        <div className=\"postContent\" dangerouslySetInnerHTML={{ __html: marked(post.content) }}/>\n        <div className=\"postComments\">\n          {\n            post.comments.map(comment =>\n              <div className=\"commentBody\" key={comment.id}>\n                <p className=\"commentAuthor\"> {comment.author} Says: </p>\n                <p className=\"commentText\" key={comment.id}>\n                  {comment.text}\n                </p>\n              </div>\n            )\n          }\n        </div>\n        <form className=\"postForm\" onSubmit={ putComment } >\n          Your name: <br/> <input name='author'/>\n          Comment: <br/><textarea name='comment' />\n          <button type='submit'> Comment </button>\n        </form>\n      </div>\n    )\n  }else{\n    return(\n      <div >\n        <img className=\"loadingImage\" src='https://ichef.bbci.co.uk/news/976/cpsprodpb/41CF/production/_109474861_angrycat-index-getty3-3.jpg' />\n      </div>\n    )\n  }\n\n}\n\nexport default Post\n","import loginService from '../services/login'\n\nconst USER_NAME = 'HEXADECIMAL_USERNAME'\nconst USER_TOKEN = 'HEXADECIMAL_TOKEN'\n\nconst userReducer = (state = null, action) => {\n  switch(action.type){\n    case 'LOGIN':\n      return action.data\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const loginUser = (username, password) => {\n  return async dispatch => {\n    try{\n      const data = await loginService.login(username, password)\n      window.localStorage.setItem(USER_NAME, data.username)\n      window.localStorage.setItem(USER_TOKEN, data.token)\n      dispatch({\n        type: 'LOGIN',\n        data\n      })\n    }catch (error){\n      console.log('invalid data')\n    }\n  }\n}\n\nexport const initUser = () => {\n  const username = window.localStorage.getItem(USER_NAME)\n  const token = window.localStorage.getItem(USER_TOKEN)\n  if(username !== null && token !== null){\n    return{\n      type: 'LOGIN',\n      data: { username, token }\n    }\n  }else{\n    return{\n      type: 'LOGOUT'\n    }\n  }\n}\n\nexport const logOut = () => {\n  return {\n    type: 'LOGOUT'\n  }\n}\n\nexport default userReducer\n","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const clear = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    clear\n  }\n}\n","import React from 'react'\nimport postService from '../services/posts'\nimport { useSelector } from 'react-redux'\nimport { useField } from '../hooks'\nimport marked from 'marked'\n\nconst PostForm = () => {\n  const userInfo = useSelector(state => state.user)\n\n  const content = useField('content')\n  const title = useField('title')\n  let author = ''\n  if(userInfo.username) { author = userInfo.username }\n\n  const publishPost = (event) => {\n    event.preventDefault()\n    const contentValue = content.value\n    const titleValue = title.value\n    // const author = userInfo.username\n    const userToken = userInfo.token\n    content.clear()\n    title.clear()\n    const postToCreate = {\n      content: contentValue,\n      title: titleValue,\n      author\n    }\n    postService.setToken(userToken)\n    postService.createPost(postToCreate)\n  }\n\n  return (\n    <div>\n      <form className=\"postForm\" onSubmit={publishPost} >\n        <input name='title' onChange={title.onChange}/>\n        <textarea name='posttext' onChange={content.onChange}/>\n        <button type='submit'> Publish! </button>\n      </form>\n      <div className=\"postTitles\">\n        <h2>{title.value}</h2>\n        <h3><em>By: {author}</em></h3>\n      </div>\n      <div dangerouslySetInnerHTML={ { __html: marked(content.value) } } ></div>\n    </div>\n  )\n}\n\nexport default PostForm\n","export default __webpack_public_path__ + \"static/media/Feed-icon.1021a409.png\";","export default __webpack_public_path__ + \"static/media/pider_sheep.64aaa791.png\";","import React from 'react'\n\nconst About = () => (\n  <div className='postBody'>\n    <h2>Hello!</h2>\n    <p>My name is Dachi Mshvidobadze - and this is my blog for SPEAIT - Social, Professional\n      and Ethical Aspects of IT. And potentially - for other purposes as well</p>\n    <p>I will write about various topics here - of course, related to that week&#39;s <a rel='noreferrer' target='_blank' href='https://wiki.itcollege.ee/index.php/E-SPEAIT' >material</a></p>\n    <p>If you would like to see what it is I am doing here, you can take a look at: <a rel='noreferrer' target='_blank' href='https://github.com/M0rdhau/SPEAIT_FRONT' >Frontend</a> and <a rel='noreferrer' target='_blank' href='https://github.com/M0rdhau/speait_back' >Backend</a></p>\n  </div>\n)\n\nexport default About\n","import React, { useEffect } from 'react'\nimport PostList from './components/PostList'\nimport { useDispatch, useSelector } from 'react-redux'\n// import { initPosts } from './reducers/postReducer'\nimport { Switch, Route, Link, useRouteMatch } from 'react-router-dom'\nimport Post from './components/Post'\n// import Login from './components/Login'\nimport { initUser } from './reducers/userReducer'\nimport PostForm from './components/PostForm'\nimport rssImage from './images/Feed-icon.png'\nimport sheepImage from './images/pider_sheep.png'\nimport About from './components/About'\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  const posts = useSelector(state => state.posts)\n\n  const padding = {\n    padding: 5\n  }\n\n  useEffect(() => {\n    // dispatch(initPosts())\n    dispatch(initUser())\n  }, [dispatch])\n\n  const match = useRouteMatch('/posts/:id')\n\n  const post = (match && posts !== undefined)\n    ? posts.find(post => post.id === match.params.id)\n    : null\n\n  return (\n    <div className=\"mainBody\">\n      <header>\n        <nav>\n          <div className='actualNav'>\n            <Link style={padding} to='/'><strong>Home</strong></Link>\n            <Link style={padding} to='/about'><strong>About</strong></Link>\n          </div>\n          {/*<Link style={padding} to='/createNew'><strong>New Post</strong></Link>*/}\n          <Link to='/'><img src={sheepImage} width='128' height='128'/></Link>\n          <a href='/feed.rss' target=\"_blank\"><img src={rssImage} width='28' height='28'/></a>\n          {/*<Login />*/}\n        </nav>\n        <h1>Does AI dream of Hexadecimal Sheep?</h1>\n        <h4>A blog for SPEAIT course</h4>\n      </header>\n      <main>\n        <Switch>\n          <Route path='/about'>\n            <About/>\n          </Route>\n          <Route path='/createNew' >\n            <PostForm/>\n          </Route>\n          <Route path='/posts/:id'>\n            <Post post={ post } />\n          </Route>\n          <Route path='/'>\n            <PostList/>\n          </Route>\n        </Switch>\n      </main>\n      <footer>\n        For Tallinn university of Technology\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport postReducer from './reducers/postReducer'\nimport userReducer from './reducers/userReducer'\n\nconst reducer = combineReducers({\n  posts: postReducer,\n  user: userReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}